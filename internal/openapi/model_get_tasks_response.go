/*
Example API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetTasksResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTasksResponse{}

// GetTasksResponse struct for GetTasksResponse
type GetTasksResponse struct {
	Tasks []Task `json:"tasks,omitempty"`
}

// NewGetTasksResponse instantiates a new GetTasksResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTasksResponse() *GetTasksResponse {
	this := GetTasksResponse{}
	return &this
}

// NewGetTasksResponseWithDefaults instantiates a new GetTasksResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTasksResponseWithDefaults() *GetTasksResponse {
	this := GetTasksResponse{}
	return &this
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *GetTasksResponse) GetTasks() []Task {
	if o == nil || IsNil(o.Tasks) {
		var ret []Task
		return ret
	}
	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTasksResponse) GetTasksOk() ([]Task, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *GetTasksResponse) HasTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []Task and assigns it to the Tasks field.
func (o *GetTasksResponse) SetTasks(v []Task) {
	o.Tasks = v
}

func (o GetTasksResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTasksResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	return toSerialize, nil
}

type NullableGetTasksResponse struct {
	value *GetTasksResponse
	isSet bool
}

func (v NullableGetTasksResponse) Get() *GetTasksResponse {
	return v.value
}

func (v *NullableGetTasksResponse) Set(val *GetTasksResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTasksResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTasksResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTasksResponse(val *GetTasksResponse) *NullableGetTasksResponse {
	return &NullableGetTasksResponse{value: val, isSet: true}
}

func (v NullableGetTasksResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTasksResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


