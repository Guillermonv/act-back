/*
Weight Tracker API

API para consultar pesos ideales y actuales agrupados semanalmente

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WeightSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeightSummary{}

// WeightSummary struct for WeightSummary
type WeightSummary struct {
	Date string `json:"date"`
	Weight float32 `json:"weight"`
}

type _WeightSummary WeightSummary

// NewWeightSummary instantiates a new WeightSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeightSummary(date string, weight float32) *WeightSummary {
	this := WeightSummary{}
	this.Date = date
	this.Weight = weight
	return &this
}

// NewWeightSummaryWithDefaults instantiates a new WeightSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeightSummaryWithDefaults() *WeightSummary {
	this := WeightSummary{}
	return &this
}

// GetDate returns the Date field value
func (o *WeightSummary) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *WeightSummary) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *WeightSummary) SetDate(v string) {
	o.Date = v
}

// GetWeight returns the Weight field value
func (o *WeightSummary) GetWeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *WeightSummary) GetWeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *WeightSummary) SetWeight(v float32) {
	o.Weight = v
}

func (o WeightSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeightSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["date"] = o.Date
	toSerialize["weight"] = o.Weight
	return toSerialize, nil
}

func (o *WeightSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"date",
		"weight",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWeightSummary := _WeightSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWeightSummary)

	if err != nil {
		return err
	}

	*o = WeightSummary(varWeightSummary)

	return err
}

type NullableWeightSummary struct {
	value *WeightSummary
	isSet bool
}

func (v NullableWeightSummary) Get() *WeightSummary {
	return v.value
}

func (v *NullableWeightSummary) Set(val *WeightSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableWeightSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableWeightSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeightSummary(val *WeightSummary) *NullableWeightSummary {
	return &NullableWeightSummary{value: val, isSet: true}
}

func (v NullableWeightSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeightSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


