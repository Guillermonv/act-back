/*
Example API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetWeightsResponseIdealInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetWeightsResponseIdealInner{}

// GetWeightsResponseIdealInner struct for GetWeightsResponseIdealInner
type GetWeightsResponseIdealInner struct {
	Date *string `json:"date,omitempty"`
	Weight *float32 `json:"weight,omitempty"`
}

// NewGetWeightsResponseIdealInner instantiates a new GetWeightsResponseIdealInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWeightsResponseIdealInner() *GetWeightsResponseIdealInner {
	this := GetWeightsResponseIdealInner{}
	return &this
}

// NewGetWeightsResponseIdealInnerWithDefaults instantiates a new GetWeightsResponseIdealInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWeightsResponseIdealInnerWithDefaults() *GetWeightsResponseIdealInner {
	this := GetWeightsResponseIdealInner{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *GetWeightsResponseIdealInner) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWeightsResponseIdealInner) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *GetWeightsResponseIdealInner) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *GetWeightsResponseIdealInner) SetDate(v string) {
	o.Date = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *GetWeightsResponseIdealInner) GetWeight() float32 {
	if o == nil || IsNil(o.Weight) {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWeightsResponseIdealInner) GetWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *GetWeightsResponseIdealInner) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *GetWeightsResponseIdealInner) SetWeight(v float32) {
	o.Weight = &v
}

func (o GetWeightsResponseIdealInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetWeightsResponseIdealInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	return toSerialize, nil
}

type NullableGetWeightsResponseIdealInner struct {
	value *GetWeightsResponseIdealInner
	isSet bool
}

func (v NullableGetWeightsResponseIdealInner) Get() *GetWeightsResponseIdealInner {
	return v.value
}

func (v *NullableGetWeightsResponseIdealInner) Set(val *GetWeightsResponseIdealInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetWeightsResponseIdealInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetWeightsResponseIdealInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetWeightsResponseIdealInner(val *GetWeightsResponseIdealInner) *NullableGetWeightsResponseIdealInner {
	return &NullableGetWeightsResponseIdealInner{value: val, isSet: true}
}

func (v NullableGetWeightsResponseIdealInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetWeightsResponseIdealInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


