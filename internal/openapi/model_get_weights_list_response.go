/*
Example API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetWeightsListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetWeightsListResponse{}

// GetWeightsListResponse struct for GetWeightsListResponse
type GetWeightsListResponse struct {
	Ideal []WeightEntry `json:"ideal,omitempty"`
	Current []WeightEntry `json:"current,omitempty"`
}

// NewGetWeightsListResponse instantiates a new GetWeightsListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWeightsListResponse() *GetWeightsListResponse {
	this := GetWeightsListResponse{}
	return &this
}

// NewGetWeightsListResponseWithDefaults instantiates a new GetWeightsListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWeightsListResponseWithDefaults() *GetWeightsListResponse {
	this := GetWeightsListResponse{}
	return &this
}

// GetIdeal returns the Ideal field value if set, zero value otherwise.
func (o *GetWeightsListResponse) GetIdeal() []WeightEntry {
	if o == nil || IsNil(o.Ideal) {
		var ret []WeightEntry
		return ret
	}
	return o.Ideal
}

// GetIdealOk returns a tuple with the Ideal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWeightsListResponse) GetIdealOk() ([]WeightEntry, bool) {
	if o == nil || IsNil(o.Ideal) {
		return nil, false
	}
	return o.Ideal, true
}

// HasIdeal returns a boolean if a field has been set.
func (o *GetWeightsListResponse) HasIdeal() bool {
	if o != nil && !IsNil(o.Ideal) {
		return true
	}

	return false
}

// SetIdeal gets a reference to the given []WeightEntry and assigns it to the Ideal field.
func (o *GetWeightsListResponse) SetIdeal(v []WeightEntry) {
	o.Ideal = v
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *GetWeightsListResponse) GetCurrent() []WeightEntry {
	if o == nil || IsNil(o.Current) {
		var ret []WeightEntry
		return ret
	}
	return o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWeightsListResponse) GetCurrentOk() ([]WeightEntry, bool) {
	if o == nil || IsNil(o.Current) {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *GetWeightsListResponse) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given []WeightEntry and assigns it to the Current field.
func (o *GetWeightsListResponse) SetCurrent(v []WeightEntry) {
	o.Current = v
}

func (o GetWeightsListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetWeightsListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ideal) {
		toSerialize["ideal"] = o.Ideal
	}
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	return toSerialize, nil
}

type NullableGetWeightsListResponse struct {
	value *GetWeightsListResponse
	isSet bool
}

func (v NullableGetWeightsListResponse) Get() *GetWeightsListResponse {
	return v.value
}

func (v *NullableGetWeightsListResponse) Set(val *GetWeightsListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetWeightsListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetWeightsListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetWeightsListResponse(val *GetWeightsListResponse) *NullableGetWeightsListResponse {
	return &NullableGetWeightsListResponse{value: val, isSet: true}
}

func (v NullableGetWeightsListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetWeightsListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


