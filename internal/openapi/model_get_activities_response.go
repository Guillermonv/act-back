/*
Example API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetActivitiesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetActivitiesResponse{}

// GetActivitiesResponse struct for GetActivitiesResponse
type GetActivitiesResponse struct {
	Activities []Activity `json:"activities,omitempty"`
}

// NewGetActivitiesResponse instantiates a new GetActivitiesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetActivitiesResponse() *GetActivitiesResponse {
	this := GetActivitiesResponse{}
	return &this
}

// NewGetActivitiesResponseWithDefaults instantiates a new GetActivitiesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetActivitiesResponseWithDefaults() *GetActivitiesResponse {
	this := GetActivitiesResponse{}
	return &this
}

// GetActivities returns the Activities field value if set, zero value otherwise.
func (o *GetActivitiesResponse) GetActivities() []Activity {
	if o == nil || IsNil(o.Activities) {
		var ret []Activity
		return ret
	}
	return o.Activities
}

// GetActivitiesOk returns a tuple with the Activities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActivitiesResponse) GetActivitiesOk() ([]Activity, bool) {
	if o == nil || IsNil(o.Activities) {
		return nil, false
	}
	return o.Activities, true
}

// HasActivities returns a boolean if a field has been set.
func (o *GetActivitiesResponse) HasActivities() bool {
	if o != nil && !IsNil(o.Activities) {
		return true
	}

	return false
}

// SetActivities gets a reference to the given []Activity and assigns it to the Activities field.
func (o *GetActivitiesResponse) SetActivities(v []Activity) {
	o.Activities = v
}

func (o GetActivitiesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetActivitiesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Activities) {
		toSerialize["activities"] = o.Activities
	}
	return toSerialize, nil
}

type NullableGetActivitiesResponse struct {
	value *GetActivitiesResponse
	isSet bool
}

func (v NullableGetActivitiesResponse) Get() *GetActivitiesResponse {
	return v.value
}

func (v *NullableGetActivitiesResponse) Set(val *GetActivitiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetActivitiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetActivitiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetActivitiesResponse(val *GetActivitiesResponse) *NullableGetActivitiesResponse {
	return &NullableGetActivitiesResponse{value: val, isSet: true}
}

func (v NullableGetActivitiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetActivitiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


